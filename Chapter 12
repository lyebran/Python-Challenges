#Chapter 12
#1)
#a)
import calendar
cal = calendar.TextCalendar()    #Create and instance
cal.pryear(2012)                 #What happens here?

#b)
import calendar
cal = calendar.TextCalendar(3)  
cal.pryear(2012)    

#c)
mon = calendar.TextCalendar()
mon.prmonth(2019,10)

#d)
d = calendar.LocaleTextCalendar(6, "SPANISH")
d.pryear(2012)

d = calendar.LocaleTextCalendar(6, "MALAY")
d.pryear(2012)

d = calendar.LocaleTextCalendar(6, "CHINESE")
d.pryear(2012)

#e)
print(calendar.isleap(2012))
print(calendar.isleap(2013))
#it is a boolean function that takes the input of a year and returns True if the year is a leap year (false if not)

#2)
#a)

print(help("math"))
#49 functions

#b)
ceil(x, /)
  Return the ceiling of x as an Integral
  
floor(x, /)
Return the floor of x as an Integral

#c) Describe how we have been computing the same value as math.sqrt without using the math module.

# Either by using a recursive function which slowly calculates itself closer and closer to the true sqrt value or by using the indicies mathematical operation **(1/2)

#d) Two data constants in the math module:
# e, infinity

#3) copy module, deepcopy:

print(help("copy"))
# Deepcopy inserts copies of each object within an old compound object into a new one. It is different from a shallow copy which inserts the same objects into a new compound, causing any changes in the original compound to too reflect in the new one

#7)
# 7. Give the Python interpreterâ€™s response to each of the following from a continuous interpreter session:

# >>> s = "If we took the bones out, it wouldn't be crunchy, would it?"

# >>> s.split()
# ['If', 'we', 'took', 'the', 'bones', 'out,', 'it', "wouldn't", 'be', 'crunchy,', 'would', 'it?']

# >>> type(s.split())
# <class 'list'>

# >>> s.split("o")
# ['If we t', '', 'k the b', 'nes ', 'ut, it w', "uldn't be crunchy, w", 'uld it?']

# >>> s.split("i")
# ['If we took the bones out, ', "t wouldn't be crunchy, would ", 't?']

# >>> "0".join(s.split("o"))
# "If we t00k the b0nes 0ut, it w0uldn't be crunchy, w0uld it?"

# Be sure you understand why you get each result. Then apply what you have learned to fill in the body of the function below using the split and join methods of str objects

import sys

def test(did_pass):
    """  Print the result of a test.  """
    linenum = sys._getframe(1).f_lineno   # Get the caller's line number.
    if did_pass:
        msg = "Test at line {0} ok.".format(linenum)
    else:
        msg = ("Test at line {0} FAILED.".format(linenum))
    print(msg)

def myreplace(old, new, s):
    """ Replace all occurrences of old with new in s. """
    if old == " ":
        s = s.split()
    else:
        s = s.split(old)
    return new.join(s)


test(myreplace(",", ";", "this, that, and some other thing") ==
                         "this; that; and some other thing")
test(myreplace(" ", "**",
                 "Words will now      be  separated by stars.") ==
                 "Words**will**now**be**separated**by**stars.")
