#Chapter 11 Exercises
#1)
print(list(range(10,0,-2)))

#3) Draw a state snapshot for a and b before and after the third line of the
#following Python code is executed:

a = [1,2,3]
b = a[:]
b[0] = 5

# a --> 1,2,3
# b --> 5
#^before
# a --> 1,2,3
# b --> 5,2,3
# ^after

#4)
this = ["I", "am", "not", "a", "crook"]
that = ["I", "am", "not", "a", "crook"]
print("Test 1: {0}".format(this is that))
that = this
print("Test 2: {0}".format(this is that))

#Chapter 11 Q5
#Vectors

u = int(input("Enter the value of x: "))
v = int(input("Enter the value of y: "))

def add_vectors(u, v):
    a = int(input("Enter the second value of x: "))
    b = int(input("Enter the second value of y: "))
    u = u + a
    v = v + b
    print(u, v)

add_vectors(u, v)

#6)
def scalar_mult(s,v):
    p = []
    for i in v:
        p.append(s*i)
    return p
  
test(scalar_mult(5, [1, 2]) == [5, 10])
test(scalar_mult(3, [1, 0, -1]) == [3, 0, -3])
test(scalar_mult(7, [3, 0, 5, 11, 2]) == [21, 0, 35, 77, 14])

#7)
def dot_product(u,v):
    summ = 0
    for i in range(0,len(u)):
        summ += (u[i]*v[i])
    return total

dot_product([1, 1], [1, 1]) ==  2
dot_product([1, 2], [1, 4]) ==  9
dot_product([1, 2, 1], [1, 4, 3]) == 12

#9)

song = "The rain in Spain..."
print(song)
print(" ".join(song(split())))

#if there are more than one spaces between letters it would replace it with a single space

#10)
def replace(s, old, new):
    s = new.join(s.split(old))
    return s
    
#11)
def swap(x, y):      # Incorrect version
     print("before swap statement: x:", x, "y:", y)
     (x, y) = (y, x)
     print("after swap statement: x:", x, "y:", y)

a = ["This", "is", "fun"]
b = [2,3,4]
print("before swap function call: a:", a, "b:", b)
swap(a, b)
print("after swap function call: a:", a, "b:", b)
    
