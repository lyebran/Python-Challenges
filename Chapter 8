#1)

# "Python"[1]
# "y"

# "Strings are sequences of characters."[5]
# "g"

#len("wonderful")
# 9

#"Mystery"[:4]
# "Myst"

# "p" in "Pineapple"
# True

#"apple" in "Pineapple"
# True

# "pear" not in "Pineapple"
# True

#  "apple" > "pineapple"
# False

# "pineapple" < "Peach"
# False

#2)

pre = "JKLMNOPQ"
suf = "ack"

for letter in pref:
    if letter in ["O","Q"]:
        letter += "u"
    print(letter + suf)

#3)
def count_letters(string, letter):
    count = 0
    for n in string:
        if n == letter:
            count += 1
    return count

#4)
def count_letters(string, letter):
    count = string.find(letter)
    return count

#5)

import string

def remove_punctuation(s):
    s_not_punc = ""
    for letter in s:
        if letter not in string.punctuation:
            s_not_punc += letter
    return s_not_punc

def counte(text):
    count = 0
    tot = 0
    text = remove_punctuation(text)
    for letter in text:
        tot += 1
        if letter == "e":
            count += 1
    per = (count/tot) *100
    per = str(per)+"%"
    print('Your text contains %d words, of which %d (%s) contain an "e".' % (tot, count, per))

#6)
def mult():
    layout = "{0:>5}{1:>5}{2:>5}{3:>5}{4:>5}{5:>5}{6:5}{7:5}{8:5}{9:5}{10:5}{11:5}"
    print(layout.format("1","2","3","4","5","6","7","8","9","10","11","12"))
    print("  :--------------------------------------------------")
    for n in range(1,13):
        print(layout.format(n, n*2, n*3, n*4, n*5, n*6, n*7, n*8, n*9, n*10, n*11, n*12))
mult()

#7)
import sys

def test(did_pass):
    """  Print the result of a test.  """
    linenum = sys._getframe(1).f_lineno   # Get the caller's line number.
    if did_pass:
        msg = "Test at line {0} ok.".format(linenum)
    else:
        msg = ("Test at line {0} FAILED.".format(linenum))
    print(msg)

def reverse(s):
    return (s[::-1])

test(reverse("happy") == "yppah")
test(reverse("Python") == "nohtyP")
test(reverse("") == "")
test(reverse("a") == "a")

#8)
def mirror(s):
    return s+s[::-1]

test(mirror("good") == "gooddoog")
test(mirror("Python") == "PythonnohtyP")
test(mirror("") == "")
test(mirror("a") == "aa")

#9)
def remove_letter(l, s):
    t = ""
    if l not in s:
        return s
    else:
        for i in s:
            if i != l:
                t += i
        return t

test(remove_letter("a", "apple") == "pple")
test(remove_letter("a", "banana") == "bnn")
test(remove_letter("z", "banana") == "banana")
test(remove_letter("i", "Mississippi") == "Msssspp")
test(remove_letter("b", "") == "")
test(remove_letter("b", "c") == "c")

#10)
def is_palindrome(s):
    if s == reverse(s):
        return True
    else:
        return False

test(is_palindrome("abba"))
test(not is_palindrome("abab"))
test(is_palindrome("tenet"))
test(not is_palindrome("banana"))
test(is_palindrome("straw warts"))
test(is_palindrome("a"))
test(is_palindrome(""))

def count(s,st):
    count = 0
    for i in range(0,len(st)-(len(s)-1)):
        test = ""
        for g in range(0,len(s)):
            test += st[i+g]
        if test == s:
            count += 1
    return count

test(count("is", "Mississippi") == 2)
test(count("an", "banana") == 2)
test(count("ana", "banana") == 2)
test(count("nana", "banana") == 1)
test(count("nanan", "banana") == 0)
test(count("aaa", "aaaaaa") == 4)

#12)
def remove(c, s):
    if c not in s:
        return s
    else:
        count = 0
        hi = ""
        for i in range(0,len(s)-(len(c)-1)):
            test = ""
            for g in range(0,len(c)):
                test += s[i+g]
            if test == c:
                hi += s[0:i] + s[(i+g+1):]
                return hi

test(remove("iss", "Mississippi") == "Missippi")
test(remove("eggs", "bicycle") == "bicycle")

#13)
def remove_all(c, s):
    return s.replace(c,"")

test(remove_all("iss", "Mississippi") == "Mippi")
test(remove_all("eggs", "bicycle") == "bicycle")
